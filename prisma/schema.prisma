// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserStatus {
  ACTIVE
  INACTIVE
  BANNED
}

enum Currency {
  BDT
  USD
  PKR
  INR
  LKR
  EUR
  GBP
  NOK
  SEK
  DKK
}

model User {
  id        String     @id @default(cuid())
  name      String?
  email     String     @unique
  password  String
  status    UserStatus @default(ACTIVE)
  currency  Currency   @default(BDT)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  loans     Loan[]
}

model Loan {
  id          String     @id @default(cuid())
  title       String     @unique
  description String?
  balance     Float      @default(0)
  status      LoanStatus @default(RUNNING)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  userId       String
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]

  @@index([userId])
}

model Transaction {
  id            String            @id @default(cuid())
  amount        Float
  type          TransactionType
  description   String?
  date          DateTime
  method        TransactionMethod
  methodDetails String?
  transactionId String?
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
  loanId        String
  loan          Loan              @relation(fields: [loanId], references: [id], onDelete: Cascade)

  @@index([loanId])
}

enum LoanStatus {
  RUNNING
  CLOSED
}

enum TransactionType {
  CREDIT
  DEBIT
}

enum TransactionMethod {
  CHECK
  CASH
  BANK_TRANSFER
  CREDIT_CARD
  DEBIT_CARD
  MOBILE_BANKING
  OTHER
}
